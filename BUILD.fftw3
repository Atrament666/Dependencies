package(default_visibility = ["//visibility:private"])

cc_library(
    name = "fftw3-lib",
    srcs = glob(
        [
            "**/*.c",
            "**/*.h",
        ],
        exclude = [
            "dft/simd/**/*",
            "rdft/simd/**/*",
            "libbench2/main.c",
            "mpi/**/*",
            "support/addchain.c",
            "tests/**/*",
            "tools/**/*",
            "threads/openmp.c",
        ],
    ) + [
        "config.h",
    ],
    copts = [
        "-DSIMD_HEADER=\\\"simd-support/simd-sse2.h\\\"",
        "-DHAVE_CONFIG_H",
        "-DHAVE_SSE2",
        "-DUSING_POSIX_THREADS",
    ],
    includes = [
        ".",
        "api",
        "dft",
        "dft/scalar",
        "dft/simd",
        "dft/simd/avx",
        "dft/simd/common",
        "dft/simd/sse2",
        "kernel",
        "libbench2",
        "rdft",
        "rdft/scalar",
        "rdft/simd",
        "reodft",
        "simd-support",
    ],
    textual_hdrs = glob([
        "dft/simd/common/**/*",
        "rdft/simd/common/**/*",
    ]),
    visibility = ["//visibility:public"],
    deps = [":fftw3-simd-sse2"],
)

cc_library(
    name = "fftw3-simd-sse2",
    srcs = glob(
        [
            "dft/simd/sse2/**/*.c",
            "rdft/simd/sse2/**/*/c",
            "dft/**/*.h",
            "kernel/**/*.h",
            "simd-support/**/*.h",
        ],
    ) + ["config.h"],
    copts = ["-DHAVE_SSE2"],
    includes = [
        ".",
        "dft",
        "dft/simd",
        "kernel",
        "simd-support",
    ],
    textual_hdrs = glob([
        "dft/simd/common/**/*",
        "rdft/simd/common/**/*",
    ]),
)

cc_library(
    name = "fftw-simd-common",
    hdrs = glob(["dft/simd/common/**/*"]),
)

genrule(
    name = "configure_gen",
    srcs = glob(["**/*"]),
    outs = ["config.h"],
    cmd = """
        $(location configure) --srcdir $$(dirname $(location config.h.in))
        cp config.h $@
    """,
)

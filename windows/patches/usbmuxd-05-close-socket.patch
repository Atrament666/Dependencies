diff -ur usbmuxd-1.0.5-old/libusbmuxd/libusbmuxd.c usbmuxd-1.0.5/libusbmuxd/libusbmuxd.c
--- usbmuxd-1.0.5-old/libusbmuxd/libusbmuxd.c	2010-09-25 15:26:42.000000000 +0100
+++ usbmuxd-1.0.5/libusbmuxd/libusbmuxd.c	2010-09-25 15:29:08.000000000 +0100
@@ -277,7 +277,7 @@
 	}
 	if (sent != (int)header.length) {
 		fprintf(stderr, "%s: ERROR: could not send whole packet\n", __func__);
-		close(sfd);
+		close_socket(sfd);
 		return -1;
 	}
 	return sent;
@@ -405,11 +405,11 @@
 	use_tag++;
 	if (send_listen_packet(sfd, use_tag) <= 0) {
 		fprintf(stderr, "%s: ERROR: could not send listen packet\n", __func__);
-		close(sfd);
+		close_socket(sfd);
 		return -1;
 	}
 	if (usbmuxd_get_result(sfd, use_tag, &res) && (res != 0)) {
-		close(sfd);
+		close_socket(sfd);
 #ifdef HAVE_PLIST
 		if ((res == RESULT_BADVERSION) && (proto_version != 1)) {
 			proto_version = 1;
@@ -538,7 +538,7 @@
 	event_cb = NULL;
 
 	if (pthread_kill(devmon, 0) == 0) {
-		close(listenfd);
+		close_socket(listenfd);
 		listenfd = -1;
 		pthread_kill(devmon, SIGINT);
 		pthread_join(devmon, NULL);
@@ -574,7 +574,7 @@
 		if (usbmuxd_get_result(sfd, use_tag, &res) && (res == 0)) {
 			listen_success = 1;
 		} else {
-			close(sfd);
+			close_socket(sfd);
 #ifdef HAVE_PLIST
 			if ((res == RESULT_BADVERSION) && (proto_version != 1)) {
 				proto_version = 1;
@@ -633,7 +633,7 @@
 	}
 
 	// explicitly close connection
-	close(sfd);
+	close_socket(sfd);
 
 	// terminating zero record
 	newlist = (usbmuxd_device_info_t*) realloc(*device_list, sizeof(usbmuxd_device_info_t) * (dev_cnt + 1));
@@ -716,7 +716,7 @@
 #ifdef HAVE_PLIST
 				if ((res == RESULT_BADVERSION) && (proto_version == 0)) {
 					proto_version = 1;
-					close(sfd);
+					close_socket(sfd);
 					goto retry;
 				}
 #endif
@@ -730,14 +730,14 @@
 		return sfd;
 	}
 
-	close(sfd);
+	close_socket(sfd);
 
 	return -1;
 }
 
 int usbmuxd_disconnect(int sfd)
 {
-	return close(sfd);
+	return close_socket(sfd);
 }
 
 int usbmuxd_send(int sfd, const char *data, uint32_t len, uint32_t *sent_bytes)
diff -ur usbmuxd-1.0.5-old/libusbmuxd/sock_stuff.c usbmuxd-1.0.5/libusbmuxd/sock_stuff.c
--- usbmuxd-1.0.5-old/libusbmuxd/sock_stuff.c	2010-09-25 15:26:42.000000000 +0100
+++ usbmuxd-1.0.5/libusbmuxd/sock_stuff.c	2010-09-25 15:28:53.000000000 +0100
@@ -85,13 +85,13 @@
 
 	if (bind(sock, (struct sockaddr *) &name, size) < 0) {
 		perror("bind");
-		close(sock);
+		close_socket(sock);
 		return -1;
 	}
 
 	if (listen(sock, 10) < 0) {
 		perror("listen");
-		close(sock);
+		close_socket(sock);
 		return -1;
 	}
 
@@ -134,7 +134,7 @@
 			+ strlen(name.sun_path) + 1);
 
 	if (connect(sfd, (struct sockaddr *) &name, size) < 0) {
-		close(sfd);
+		close_socket(sfd);
 		if (verbose >= 2)
 			fprintf(stderr, "%s: connect: %s\n", __func__,
 					strerror(errno));
@@ -168,7 +168,7 @@
 
 	if (setsockopt(sfd, SOL_SOCKET, SO_REUSEADDR, (void*)&yes, sizeof(int)) == -1) {
 		perror("setsockopt()");
-		close(sfd);
+		close_socket(sfd);
 		return -1;
 	}
 
@@ -179,13 +179,13 @@
 
 	if (0 > bind(sfd, (struct sockaddr *) &saddr, sizeof(saddr))) {
 		perror("bind()");
-		close(sfd);
+		close_socket(sfd);
 		return -1;
 	}
 
 	if (listen(sfd, 1) == -1) {
 		perror("listen()");
-		close(sfd);
+		close_socket(sfd);
 		return -1;
 	}
 
@@ -235,7 +235,7 @@
 
 	if (setsockopt(sfd, SOL_SOCKET, SO_REUSEADDR, (void*)&yes, sizeof(int)) == -1) {
 		perror("setsockopt()");
-		close(sfd);
+		close_socket(sfd);
 		return -1;
 	}
 
@@ -246,7 +246,7 @@
 
 	if (connect(sfd, (struct sockaddr *) &saddr, sizeof(saddr)) < 0) {
 		perror("connect");
-		close(sfd);
+		close_socket(sfd);
 		return -2;
 	}
 
@@ -321,6 +321,14 @@
 	return sret;
 }
 
+int close_socket(int fd) {
+#ifdef WIN32
+	return closesocket(fd);
+#else
+	return close(fd);
+#endif
+}
+
 int recv_buf(int fd, void *data, size_t length)
 {
 	return recv_buf_timeout(fd, data, length, 0, RECV_TIMEOUT);
diff -ur usbmuxd-1.0.5-old/libusbmuxd/sock_stuff.h usbmuxd-1.0.5/libusbmuxd/sock_stuff.h
--- usbmuxd-1.0.5-old/libusbmuxd/sock_stuff.h	2010-09-25 15:26:42.000000000 +0100
+++ usbmuxd-1.0.5/libusbmuxd/sock_stuff.h	2010-09-25 15:29:08.000000000 +0100
@@ -43,6 +43,8 @@
 #endif
 int check_fd(int fd, fd_mode fdm, unsigned int timeout);
 
+int close_socket(int fd);
+
 int recv_buf(int fd, void *data, size_t size);
 int peek_buf(int fd, void *data, size_t size);
 int recv_buf_timeout(int fd, void *data, size_t size, int flags,
Only in usbmuxd-1.0.5: usbmuxd.creator.user

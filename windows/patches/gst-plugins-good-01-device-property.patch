diff --git a/sys/directsound/gstdirectsoundsink.c b/sys/directsound/gstdirectsoundsink.c
index 56b0418..cecd88d 100644
--- a/sys/directsound/gstdirectsoundsink.c
+++ b/sys/directsound/gstdirectsoundsink.c
@@ -124,7 +124,8 @@ enum
 {
   PROP_0,
   PROP_VOLUME,
-  PROP_MUTE
+  PROP_MUTE,
+  PROP_DEVICE
 };
 
 #define gst_directsound_sink_parent_class parent_class
@@ -189,6 +190,11 @@ gst_directsound_sink_class_init (GstDirectSoundSinkClass * klass)
           "Mute state of this stream", DEFAULT_MUTE,
           G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
 
+  g_object_class_install_property (gobject_class,
+      PROP_DEVICE,
+      g_param_spec_pointer ("device", "Device",
+          "Pointer to a GUID", G_PARAM_WRITABLE));
+
   gst_element_class_set_static_metadata (element_class,
       "Direct Sound Audio Sink", "Sink/Audio",
       "Output to a sound card via Direct Sound",
@@ -218,6 +224,7 @@ gst_directsound_sink_set_property (GObject * object,
     guint prop_id, const GValue * value, GParamSpec * pspec)
 {
   GstDirectSoundSink *sink = GST_DIRECTSOUND_SINK (object);
+  void* ptr = NULL;
 
   switch (prop_id) {
     case PROP_VOLUME:
@@ -226,6 +233,15 @@ gst_directsound_sink_set_property (GObject * object,
     case PROP_MUTE:
       gst_directsound_sink_set_mute (sink, g_value_get_boolean (value));
       break;
+    case PROP_DEVICE:
+      ptr = g_value_get_pointer (value);
+      if (ptr) {
+        sink->has_device = 1;
+        memcpy(&sink->device, ptr, sizeof(GUID));
+      } else {
+        sink->has_device = 0;
+      }
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -386,8 +402,13 @@ gst_directsound_sink_open (GstAudioSink * asink)
 
   dsoundsink = GST_DIRECTSOUND_SINK (asink);
 
+  GUID* device = NULL;
+  if (dsoundsink->has_device) {
+    device = &dsoundsink->device;
+  }
+
   /* create and initialize a DirecSound object */
-  if (FAILED (hRes = DirectSoundCreate (NULL, &dsoundsink->pDS, NULL))) {
+  if (FAILED (hRes = DirectSoundCreate (device, &dsoundsink->pDS, NULL))) {
     GST_ELEMENT_ERROR (dsoundsink, RESOURCE, OPEN_READ,
         ("gst_directsound_sink_open: DirectSoundCreate: %s",
             DXGetErrorString9 (hRes)), (NULL));
diff --git a/sys/directsound/gstdirectsoundsink.h b/sys/directsound/gstdirectsoundsink.h
index 3a83181..623399f 100644
--- a/sys/directsound/gstdirectsoundsink.h
+++ b/sys/directsound/gstdirectsoundsink.h
@@ -75,6 +75,9 @@ struct _GstDirectSoundSink
   glong volume;
   gboolean mute;
 
+  int has_device;
+  GUID device;
+
   GstCaps *cached_caps;
   /* lock used to protect writes and resets */
   GMutex dsound_lock;
